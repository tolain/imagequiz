{"version":3,"sources":["communication/flowers.js","components/Home.js","communication/customers.js","components/Register.js","components/Login.js","components/Menu.js","communication/data.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["flowers","name","picture","Home","props","history","useHistory","Container","Row","xs","md","className","map","flower","Col","Card","onClick","push","pathname","state","flowerName","Img","variant","src","Body","Text","customers","Register","useState","username","setUsername","password","setPassword","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Button","LogIn","found","find","x","console","log","Menu","location","useLocation","Navbar","Brand","href","Toggle","Collapse","Nav","Link","quizzes","questionIndex","questions","choiceIndex","i","length","question","choices","answer","generateQuestions","quiz","generateQuizzes","Quiz","currentIndex","setCurrentIndex","quizFinished","setQuizFinished","gameOver","setGameOver","y","Image","ListGroup","array","places","item","index","random_index","Math","floor","random","places_value","splice","shuffle","choice","Item","selectedChoice","action","to","App","exact","path","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.190955a3.chunk.js","sourcesContent":["let flowers = [\r\n    {\r\n        name: \"Acacia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\r\n    },\r\n    {\r\n        name: \"Alyssum\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\r\n    },\r\n    {\r\n        name: \"Amaryllis\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\r\n    },\r\n    {\r\n        name: \"Aster\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\r\n    },\r\n    {\r\n        name: \"Azalea\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\r\n    },\r\n    {\r\n        name: \"Begonia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\r\n    },\r\n    {\r\n        name: \"Buttercup\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\r\n    },\r\n    {\r\n        name: \"Calluna\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\r\n    },\r\n    {\r\n        name: \"Camellia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\r\n    },\r\n    {\r\n        name: \"Cardinal\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\r\n    },\r\n    {\r\n        name: \"Carnation\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\r\n    },\r\n    {\r\n        name: \"Clover\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\r\n    },\r\n    {\r\n        name: \"Crown Imperial\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\r\n    },\r\n    {\r\n        name: \"Daffodil\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\r\n    },\r\n    {\r\n        name: \"Dahlia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\r\n    },\r\n    {\r\n        name: \"Daisy\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\r\n    },\r\n    {\r\n        name: \"Gladiolus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\r\n    },\r\n    {\r\n        name: \"Lantana\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\r\n    },\r\n    {\r\n        name: \"Lily\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\r\n    },\r\n    {\r\n        name: \"Lotus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\r\n    },\r\n    {\r\n        name: \"Marigold\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\r\n    },\r\n    {\r\n        name: \"Orchid\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\r\n    },\r\n    {\r\n        name: \"Primrose\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\r\n    },\r\n    {\r\n        name: \"Sunflower\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\r\n    },\r\n    {\r\n        name: \"Tickseed\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\r\n    },\r\n    {\r\n        name: \"Tulip\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\r\n    },\r\n    {\r\n        name: \"Zinnia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\r\n    }\r\n];\r\n\r\nexport default flowers;","\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport flowers from '../communication/flowers';\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst Home = (props) => {\r\n\r\n    const history = useHistory ()\r\n    let goToQuiz = (name) => {\r\n        history.push({pathname:'/quiz', state: {flowerName: name}})\r\n    }\r\n    let getImages = () => {\r\n        return flowers.map(flower => \r\n        <Col key = {flower.name}>\r\n        <Card onClick = {() => goToQuiz (flower.name)}> \r\n            <Card.Img variant=\"top\" src={flower.picture} />\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {flower.name}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card></Col>);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row xs={1} md={2} className=\"g-4\">\r\n            {getImages()}\r\n            </Row>\r\n        </Container>\r\n    );\r\n    \r\n}\r\n\r\nexport default Home;","\r\n\r\nlet customers = [];\r\n\r\nexport default customers;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useState} from 'react';\r\nimport customers from '../communication/customers';\r\n\r\nconst Register = () => {\r\n        const [username, setUsername] = useState('');\r\n        const [password, setPassword] = useState('');\r\n\r\n        let saveCustomer = (e) => {\r\n            e.preventDefault();\r\n            customers.push({username: username, password: password})\r\n    }\r\n\r\n    let onUsernameChanged = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    let onPasswordChanged = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    return (\r\n        <Form onSubmit={saveCustomer}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Choose a username(your email address):</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" value={username} onChange={onUsernameChanged}/>\r\n               \r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Choose a password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={onPasswordChanged}/>\r\n            </Form.Group>\r\n            \r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Sign Up\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Register;","import customers from \"../communication/customers\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst LogIn = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    let login = (e) => {\r\n        e.preventDefault();\r\n        let found = customers.find(x => x.username === username & x.password === password);\r\n        if(found) {\r\n            console.log(found);\r\n            history.push({pathname: '/', state: {username: username}});\r\n        }\r\n    }\r\n\r\n    let onUsernameChanged = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    let onPasswordChanged = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n        return (\r\n            <Form onSubmit={login}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Username:</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={username} onChange={onUsernameChanged}/>\r\n                \r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={onPasswordChanged}/>\r\n                </Form.Group>\r\n                \r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Log In\r\n                </Button>\r\n            </Form>\r\n        );\r\n\r\n    }\r\n\r\nexport default LogIn;","import { useLocation } from \"react-router-dom\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nconst Menu = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <Navbar>\r\n            <Container>\r\n                <Navbar.Brand href=\"#home\">Hello World App</Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav.Link href=\"#login\">Sign In</Nav.Link>\r\n                <Nav.Link href=\"#signup\">Sign Up</Nav.Link>\r\n                {(location.state && location.state.username) ?\r\n                    <Navbar.Text>\r\n                        Signed in as: <a href=\"#login\">{location.state.username}</a>\r\n                    </Navbar.Text>\r\n                : ''}                    \r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Menu;","import flowers from './flowers';\r\n\r\nlet generateQuestions = () => {\r\n    let questions = [];\r\n    let choiceIndex = 0;\r\n    for(let i = 0; i < flowers.length; i++) {\r\n        choiceIndex = i;\r\n        if(choiceIndex > (flowers.length - 4)){\r\n           choiceIndex = i - 2;\r\n        }\r\n        let question = {\r\n            picture: flowers[i].picture,\r\n            choices: [flowers[choiceIndex].name, flowers[choiceIndex+1].name, flowers[choiceIndex+2].name],\r\n            answer: flowers[i].name\r\n        };\r\n        questions.push(question);\r\n    }\r\n    return questions;\r\n};\r\n\r\nlet generateQuizzes = () => {\r\n    let quizzes = []; \r\n    let questionIndex = 0;\r\n    let questions = generateQuestions();\r\n    for(let i = 0; i < questions.length; i++){\r\n        questionIndex = i;\r\n        if(questionIndex > (questions.length - 7)) {\r\n            questionIndex = i - 5;\r\n        }\r\n        let quiz = [\r\n            questions[questionIndex], \r\n            questions[questionIndex+1], \r\n            questions[questionIndex+2], \r\n            questions[questionIndex+3], \r\n            questions[questionIndex+4],\r\n            questions[questionIndex+5]\r\n        ];\r\n        quizzes.push(quiz);\r\n    }\r\n    return quizzes;\r\n};\r\n\r\nlet quizzes = generateQuizzes();\r\n\r\n\r\nexport default quizzes;","import {useLocation, Link} from 'react-router-dom'\r\nimport quizzes from '../communication/data'\r\nimport Col from \"react-bootstrap/Col\";\r\n// import Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {useState} from 'react';\r\nimport { Row, Image, Container, Button } from 'react-bootstrap';\r\n\r\nlet Quiz = () => {\r\n    const [currentIndex, setCurrentIndex] = useState (0); \r\n    const [quizFinished, setQuizFinished] = useState (0);\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const location = useLocation ()\r\n    const questions = quizzes.find (x => x.find (y => y.answer === location.state.flowerName))\r\n    let nextQuestion = (selectedChoice) => {\r\n        if (currentIndex < questions.length - 1) {setCurrentIndex (currentIndex + 1);}\r\n        else {\r\n            setGameOver(true);\r\n        }\r\n        if (questions[currentIndex].answer === selectedChoice) {\r\n            setQuizFinished(quizFinished + 1);\r\n        }\r\n    }\r\n\r\n    let restartQuiz = () => {\r\n        console.log(currentIndex);\r\n        setCurrentIndex(0);\r\n        setGameOver(false);\r\n        setQuizFinished(0);\r\n    }\r\n\r\n    function shuffle(array) {\r\n        let places  = array.map((item, index) => index);\r\n        return array.map((item, index, array) => {\r\n            const random_index = Math.floor(Math.random() * places.length);\r\n            const places_value = places[random_index];\r\n            places.splice(random_index, 1);\r\n            return array[places_value];\r\n        })\r\n}\r\n\r\n    return (\r\n        <Container>\r\n            {!gameOver ?\r\n            <Row>\r\n                <Col>\r\n                    <Image src={questions[currentIndex].picture}></Image>\r\n                </Col>\r\n                <Col>\r\n                    <ListGroup>\r\n                        {shuffle(questions[currentIndex].choices).map(choice =>\r\n                            <ListGroup.Item key={choice} onClick={() => nextQuestion(choice)} action variant=\"light\">\r\n                            {choice}\r\n                        </ListGroup.Item>\r\n                            )}\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            :''}\r\n            <Row>\r\n                <Col>\r\n                    score: {quizFinished}\r\n                </Col>\r\n            </Row>\r\n            {gameOver ?\r\n            <Row>\r\n                <Col>\r\n                    <Button onClick={restartQuiz}>Restart</Button>\r\n                </Col>\r\n                <Col>\r\n                    <Link to=\"/\"><Button>Go Home</Button></Link>\r\n                </Col>\r\n            </Row>\r\n            :''}\r\n        </Container>\r\n    );\r\n}\r\nexport default Quiz;\r\n/*\r\n    )\r\n    return (<div>\r\n        <Col>\r\n        <Card> \r\n            <Card.Img variant=\"top\" src={questions[currentIndex].picture} />\r\n            <Card.Body>\r\n                <Card.Text>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card></Col>\r\n        <Col>\r\n        <ListGroup>\r\n        {questions[currentIndex].choices.map(choice => <ListGroup.Item onClick={nextQuestion} action variant=\"secondary\">\r\n            {choice}\r\n  </ListGroup.Item>)}\r\n  </ListGroup>\r\n        </Col>\r\n    </div>)\r\n}\r\nexport default Quiz\r\n*/","import Home from './components/Home';\r\nimport Register from './components/Register';\r\nimport Login from './components/Login';\r\nimport Menu from './components/Menu';\r\nimport {\r\n  HashRouter,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Quiz from './components/Quiz'\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Container>\r\n        <Row>\r\n          <Col>This is the header!</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col><Menu/></Col>\r\n        </Row>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Home/>\r\n          </Route>\r\n          <Route path='/signup'>\r\n            <Register />\r\n          </Route>\r\n          <Route path= '/quiz'>\r\n            <Quiz />\r\n          </Route>\r\n          <Route path='/login'>\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n        <Row>\r\n          <Col>This is the footer!</Col>\r\n        </Row>\r\n      </Container>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}